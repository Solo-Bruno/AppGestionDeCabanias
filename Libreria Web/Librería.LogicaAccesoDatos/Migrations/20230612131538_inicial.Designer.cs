// <auto-generated />
using System;
using Librería.LogicaAccesoDatos.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Libreria.LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20230612131538_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.Cabania", b =>
                {
                    b.Property<int>("NumeroHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroHabitacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TieneJacuzzi")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneReservas")
                        .HasColumnType("bit");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<int>("topiMaximoCab")
                        .HasColumnType("int");

                    b.Property<int>("topiMinimoCab")
                        .HasColumnType("int");

                    b.HasKey("NumeroHabitacion");

                    b.HasIndex("TipoId");

                    b.ToTable("Cabania");
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabaniaId")
                        .HasColumnType("int");

                    b.Property<int>("Costo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("topeMaximoMtto")
                        .HasColumnType("int");

                    b.Property<int>("topeMinimoMtto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabaniaId");

                    b.ToTable("Mantenimiento");
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.Parametro", b =>
                {
                    b.Property<string>("NombreParametro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ValorDelParametro")
                        .HasColumnType("int");

                    b.HasKey("NombreParametro");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.TipoCabania", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CostoHuesped")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("topeMaximo")
                        .HasColumnType("int");

                    b.Property<int>("topeMinimo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoCabania");
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.Cabania", b =>
                {
                    b.HasOne("Libreria.LogicaNegocio.Entidades.TipoCabania", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Libreria.LogicaNegocio.Entidades.ValueObject.Cabania.CantMaxPersonasCabania", "CantMaxPers", b1 =>
                        {
                            b1.Property<int>("CabaniaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<int>("CantMaxPers")
                                .HasColumnType("int");

                            b1.HasKey("CabaniaNumeroHabitacion");

                            b1.ToTable("Cabania");

                            b1.WithOwner()
                                .HasForeignKey("CabaniaNumeroHabitacion");
                        });

                    b.OwnsOne("Libreria.LogicaNegocio.Entidades.ValueObject.Cabania.NombreCabania", "Nombre", b1 =>
                        {
                            b1.Property<int>("CabaniaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("ValorNombre");

                            b1.HasKey("CabaniaNumeroHabitacion");

                            b1.HasIndex("Valor")
                                .IsUnique();

                            b1.ToTable("Cabania");

                            b1.WithOwner()
                                .HasForeignKey("CabaniaNumeroHabitacion");
                        });

                    b.Navigation("CantMaxPers")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("Libreria.LogicaNegocio.Entidades.Cabania", "Cabania")
                        .WithMany("MisMantenimientos")
                        .HasForeignKey("CabaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Libreria.LogicaNegocio.Entidades.ValueObject.Mantenimiento.FechaMantenimiento", "Fecha", b1 =>
                        {
                            b1.Property<int>("MantenimientoId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Valor")
                                .HasColumnType("datetime2");

                            b1.HasKey("MantenimientoId");

                            b1.ToTable("Mantenimiento");

                            b1.WithOwner()
                                .HasForeignKey("MantenimientoId");
                        });

                    b.Navigation("Cabania");

                    b.Navigation("Fecha")
                        .IsRequired();
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.TipoCabania", b =>
                {
                    b.OwnsOne("Libreria.LogicaNegocio.Entidades.ValueObject.TipoCabania.NombreTipoCabania", "Nombre", b1 =>
                        {
                            b1.Property<int>("TipoCabaniaId")
                                .HasColumnType("int");

                            b1.Property<string>("ValorNombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("NombreDelTipo");

                            b1.HasKey("TipoCabaniaId");

                            b1.HasIndex("ValorNombre")
                                .IsUnique();

                            b1.ToTable("TipoCabania");

                            b1.WithOwner()
                                .HasForeignKey("TipoCabaniaId");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.Cabania", b =>
                {
                    b.Navigation("MisMantenimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
